version: "3.6"
services:
  graphql-engine:
    build:
      context: ./hasura
      dockerfile: Dockerfile
    image: 008425813248.dkr.ecr.us-east-1.amazonaws.com/signet-backend-hasura
    ports:
      - "8080:8080"
    restart: always
    environment:
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: ${PG_DATABASE_URL}
      HASURA_GRAPHQL_METADATA_DATABASE_URL: ${PG_DATABASE_URL}
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "public"
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  actions-service:
    build:
      context: ./services/actions-service
      dockerfile: Dockerfile
    image: 008425813248.dkr.ecr.us-east-1.amazonaws.com/signet-backend-actions
    ports:
      - "3030:3030"
    environment:
      PORT: 3030
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_ENDPOINT: http://graphql-engine:8080
    depends_on:
      - graphql-engine
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  siws-service:
    build:
      context: ./services/siws-service
      dockerfile: Dockerfile
    image: 008425813248.dkr.ecr.us-east-1.amazonaws.com/signet-backend-siws
    ports:
      - "3031:3031"
    environment:
      PORT: 3031
      NODE_ENV: ${NODE_ENV}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}
      HASURA_ENDPOINT: http://graphql-engine:8080
    depends_on:
      - graphql-engine
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
